dnl $Id$
dnl
dnl Copyright (c) 2008
dnl         The Xfce development team. All rights reserved.
dnl
dnl Authors
dnl         Jasper Huijsmans <jasper@xfce.org>
dnl

dnl -------------------------------------------------------
dnl version information
dnl -------------------------------------------------------

m4_define([appfinder_version_major], [4])
m4_define([appfinder_version_minor], [5])
m4_define([appfinder_version_micro], [0])
m4_define([appfinder_version_nano],  []) dnl leave this empty to have no nano version
m4_define([appfinder_version_build], [r@REVISION@])
m4_define([appfinder_version_tag],   [])
m4_define([appfinder_version], [appfinder_version_major().appfinder_version_minor().appfinder_version_micro()ifelse(appfinder_version_nano(), [], [], [.appfinder_version_nano()])ifelse(appfinder_version_tag(), [svn], [appfinder_version_tag()-appfinder_version_build()], [appfinder_version_tag()])])

dnl minimum required versions
m4_define([gtk_minimum_version], [2.8.0])
m4_define([xfce4menu_minimum_version], [0.1.0svn-r26163])
m4_define([intltool_minimum_version], [0.31])
m4_define([autoconf_minimum_version], [2.50])

dnl debugging support for SVN snapshots
m4_define([appfinder_debug_default], [ifelse(appfinder_version_tag(), [svn], [yes], [minimum])])


dnl -------------------------------------------------------
dnl initialization
dnl -------------------------------------------------------

AC_COPYRIGHT([Copyright (c) 2008
        The Xfce development team. All rights reserved.

Written for Xfce by Jasper Huijsmans <jasper@xfce.org>.])
AC_INIT([xfce4-appfinder], [appfinder_version], [http://bugzilla.xfce.org/], [xfce4-appfinder])
AC_PREREQ([autoconf_minimum_version()])
AC_REVISION([$Id$])

AM_CONFIG_HEADER([config.h])
AM_INIT_AUTOMAKE([1.8 dist-bzip2 tar-ustar])
AM_MAINTAINER_MODE()

dnl check for UNIX variants
AC_AIX()
AC_ISC_POSIX()
AC_MINIX()
AM_CONDITIONAL([HAVE_CYGWIN], [test "`uname | grep \"CYGWIN\"`" != ""])

dnl check for basic programs ***
AC_PROG_CC()
AC_PROG_LD()
AC_PROG_INSTALL()
AC_PROG_INTLTOOL([intltool_minimum_version], [no-xml])
AC_CHECK_PROGS([PERL], [perl5 perl])

dnl automake complains when this is not defined, don't know why.
AM_PROG_CC_C_O()

dnl initialize libtool
AC_DISABLE_STATIC()
AC_PROG_LIBTOOL()

dnl inntltool-update hack
AC_CONFIG_COMMANDS([intltool-update],
    [(sed -e 's/^\("desktop.*".*\)/\1\n"rc(?:\\\\.in)+|"\./' intltool-update > intltool-update-tmp &&
      mv intltool-update-tmp intltool-update && chmod 755 intltool-update)])

dnl check for standard headers
AC_HEADER_STDC()
AC_CHECK_HEADERS([string.h])

dnl check for i18n support
XDT_I18N([@LINGUAS@])

dnl check X11 installation
XDT_CHECK_LIBX11_REQUIRE()
XDT_CHECK_LIBSM()


dnl -------------------------------------------------------
dnl dependencies and compile options
dnl -------------------------------------------------------

dnl required packages
XDT_CHECK_PACKAGE([GTHREAD], [gthread-2.0], [gtk_minimum_version])
XDT_CHECK_PACKAGE([GTK], [gtk+-2.0], [gtk_minimum_version])
#XDT_CHECK_PACKAGE([LIBXFCE4UTIL], [libxfce4util-1.0], [4.5.0])
XDT_CHECK_PACKAGE([LIBXFCE4MENU], [libxfce4menu-0.1], [xfce4menu_minimum_version])

dnl disable deprecated components
AC_DEFINE([XFCE_DISABLE_DEPRECATED], [1], [Define to 1 to disable deprecated Xfce components])
AC_DEFINE([G_DISABLE_DEPRECATED], [1], [Define to 1 to disable deprecated Glib components])

dnl debugging support
AC_ARG_ENABLE([debug],
AC_HELP_STRING([--enable-debug=@<:@no/minimum/yes/full@:>@], 
	       [Turn on debugging @<:@default=appfinder_debug_default@:>@]),
	       [], [enable_debug=appfinder_debug_default])
AC_MSG_CHECKING([whether to enable debugging support])
if test x"$enable_debug" = x"full" -o x"$enable_debug" = x"yes"; then
  dnl Print the result
  AC_MSG_RESULT([$enable_debug])

  dnl Make sure we detect possible errors (if supported)
  save_CFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS -Wall -Werror"
  AC_MSG_CHECKING([whether $CC accepts -Wall -Werror])
  AC_COMPILE_IFELSE(AC_LANG_SOURCE([int x;]), [
    AC_MSG_RESULT([yes])
    PLATFORM_CFLAGS="$PLATFORM_CFLAGS -Wall -Werror"
  ], [
    AC_MSG_RESULT([no])
  ])
  CFLAGS="$save_CFLAGS"

  dnl Paranoia for --enable-debug=full
  if test x"$enable_debug" = x"full"; then
    dnl Enable extensive debugging
    PLATFORM_CPPFLAGS="$PLATFORM_CPPFLAGS -DG_ENABLE_DEBUG"

    dnl Use -O0 -g3 if the compiler supports it
    save_CFLAGS="$CFLAGS"
    CFLAGS="$CFLAGS -O0 -g3"
    AC_MSG_CHECKING([whether $CC accepts -O0 -g3])
    AC_COMPILE_IFELSE(AC_LANG_SOURCE([int x;]), [
      AC_MSG_RESULT([yes])
      PLATFORM_CFLAGS="$PLATFORM_CFLAGS -O0 -g3"
    ], [
      AC_MSG_RESULT([no])
    ])
    CFLAGS="$save_CFLAGS"
  fi
else
  dnl Print the result
  AC_MSG_RESULT([$enable_debug])

  dnl Disable debugging (release build)
  PLATFORM_CPPFLAGS="$PLATFORM_CPPFLAGS -DNDEBUG"

  dnl Disable object cast checks
  PLATFORM_CPPFLAGS="$PLATFORM_CPPFLAGS -DG_DISABLE_CAST_CHECKS"

  dnl Disable all checks for --enable-debug=no
  if test x"$enable_debug" = x"no"; then
    PLATFORM_CPPFLAGS="$PLATFORM_CPPFLAGS -DG_DISABLE_ASSERT -DG_DISABLE_CHECKS"
  fi
fi

dnl check for ELF visibility support
AC_ARG_ENABLE([visibility], AC_HELP_STRING([--disable-visibility], [Don't use ELF visibility attributes]), [], [enable_visibility=yes])
have_gnuc_visibility=no
if test x"$enable_visibility" != x"no"; then
  dnl Check whether the compiler supports the visibility attribute
  save_CFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS -Wall -Werror"
  AC_MSG_CHECKING([whether $CC supports the GNUC visibility attribute])
  AC_COMPILE_IFELSE(AC_LANG_SOURCE(
  [
    void __attribute__ ((visibility("default"))) test_default (void) {}
    void __attribute__ ((visibility("hidden"))) test_hidden (void) {}
    int main (int argc, char **argv) { test_default (); test_hidden (); return 0; }
  ]),
  [
    have_gnuc_visibility=yes
    AC_MSG_RESULT([yes])
  ],
  [
    AC_MSG_RESULT([no])
  ])
  CFLAGS="$save_CFLAGS"
fi
if test x"$have_gnuc_visibility" = x"yes"; then
  PLATFORM_CPPFLAGS="$PLATFORM_CPPFLAGS -DHAVE_GNUC_VISIBILITY"
fi
AM_CONDITIONAL([HAVE_GNUC_VISIBILITY], [test x"$have_gnuc_visibility" = x"yes"])

dnl substitute platform flags
AC_MSG_CHECKING([PLATFORM_CPPFLAGS])
AC_MSG_RESULT([$PLATFORM_CPPFLAGS])
AC_SUBST([PLATFORM_CPPFLAGS])
AC_MSG_CHECKING([PLATFORM_CFLAGS])
AC_MSG_RESULT([$PLATFORM_CFLAGS])
AC_SUBST([PLATFORM_CFLAGS])
AC_MSG_CHECKING([PLATFORM_LDFLAGS])
AC_MSG_RESULT([$PLATFORM_LDFLAGS])
AC_SUBST([PLATFORM_LDFLAGS])


dnl -------------------------------------------------------
dnl output
dnl -------------------------------------------------------

AC_OUTPUT([
Makefile
xfce4-appfinder.spec
src/Makefile
data/Makefile
po/Makefile.in
])
#docs/Makefile

echo
echo "Build Configuration:"
echo
echo "* Debugging Support:             $enable_debug"
echo
